test_sound.play()

# Get the actual onset time of the sound in global time
audio_onset_global = test_sound.getLastSoundStartTime()

# Reset clock so that 0 = actual audio onset
trialClock = core.Clock()
trialClock.reset(-audio_onset_global)

# Convert Excel times from ms to sec
trigger_times_sec = [
    float(trigger_item) / 1000.0,
    float(trigger_senonset) / 1000.0,
    float(trigger_verbsonset) / 1000.0,
    float(trigger_1_F0) / 1000.0,
    float(trigger_suffix) / 1000.0,
    float(trigger_2_F0) / 1000.0,
]
trigger_codes = [
    int(ID_item),
    int(ID_senonset),
    int(ID_verbonset),
    int(ID_1_F0),
    int(ID_suffix),
    int(ID_2_F0),
]

# Send triggers at specified times
next_trigger_index = 0
while next_trigger_index < len(trigger_times_sec):
    now = trialClock.getTime()
    if now >= trigger_times_sec[next_trigger_index]:
        send_trigger(trigger_codes[next_trigger_index])
        print(f"Trigger {trigger_codes[next_trigger_index]} sent at {now:.6f} sec")
        next_trigger_index += 1
    else:
        core.wait(0.001)
