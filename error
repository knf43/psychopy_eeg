import pandas as pd

# Load the full practice file
df = pd.read_excel('conditions_stress_practice.xlsx')

# Add file_name column if missing
if 'file_name' not in df.columns:
    df['file_name'] = df['sounds'].apply(lambda x: x.split("/")[-1])

# Add sentence and cond columns from the filename
df['sentence'] = df['file_name'].apply(lambda x: x[:2])
df['cond'] = df['file_name'].apply(lambda x: x[2])

# Create combo and define target combos
df['combo'] = df['sentence'] + df['cond']
target_combos = ['p1a', 'p2b', 'p3c', 'p4d']

# Select only those rows
selected_practice = df[df['combo'].isin(target_combos)].reset_index(drop=True)

# Raise error if any combo is missing
if selected_practice.shape[0] != 4:
    raise ValueError("Missing one or more practice items: p1a, p2b, p3c, p4d.")

# Cast ID_* columns to int
id_cols = [col for col in selected_practice.columns if col.startswith("ID_")]
for col in id_cols:
    selected_practice[col] = pd.to_numeric(selected_practice[col], errors='coerce').fillna(0).astype(int)

# Cast trigger_* and ms_* columns to float
trigger_cols = [col for col in selected_practice.columns if col.startswith("trigger_") or col.startswith("ms_")]
for col in trigger_cols:
    selected_practice[col] = pd.to_numeric(selected_practice[col], errors='coerce').fillna(0).astype(float)

# Save final selected rows for the loop
selected_practice.to_csv('selected_practice.csv', index=False)
