# Send all 6 triggers safely as 1-byte integers

try:
    if ID_item is not None:
        serialPort_item_2.write(bytes([int(ID_item)]))
        core.wait(0.005)
        serialPort_item_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_item: {e}")

try:
    if ID_senonset is not None:
        serialPort_senonset_2.write(bytes([int(ID_senonset)]))
        core.wait(0.005)
        serialPort_senonset_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_senonset: {e}")

try:
    if ID_verbonset is not None:
        serialPort_verbonset_2.write(bytes([int(ID_verbonset)]))
        core.wait(0.005)
        serialPort_verbonset_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_verbonset: {e}")

try:
    if ID_1_F0 is not None:
        serialPort_1_F0_2.write(bytes([int(ID_1_F0)]))
        core.wait(0.005)
        serialPort_1_F0_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_1_F0: {e}")

try:
    if ID_suffix is not None:
        serialPort_suffix_2.write(bytes([int(ID_suffix)]))
        core.wait(0.005)
        serialPort_suffix_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_suffix: {e}")

try:
    if ID_2_F0 is not None:
        serialPort_2_F0_2.write(bytes([int(ID_2_F0)]))
        core.wait(0.005)
        serialPort_2_F0_2.write(bytes([0]))
except Exception as e:
    print(f"Error sending ID_2_F0: {e}")
