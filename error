import pandas as pd
import random

# Load full experimental file
df = pd.read_excel('conditions_stress.xlsx')

# Add helper columns if missing
if 'file_name' not in df.columns:
    df['file_name'] = df['sounds'].apply(lambda x: x.split("/")[-1])
    df['item_id'] = df['file_name'].apply(lambda x: x[:2])
    df['cond'] = df['file_name'].apply(lambda x: x[2])

# Get participant number
try:
    pnum = int(expInfo['participant'])
except:
    pnum = 1

# Rotation scheme based on participant
rotation = (pnum - 1) % 8
condition_orders = [
    ['a', 'b', 'c', 'd'],
    ['b', 'c', 'd', 'a'],
    ['c', 'd', 'a', 'b'],
    ['d', 'a', 'b', 'c'],
    ['a', 'c', 'b', 'd'],
    ['b', 'd', 'a', 'c'],
    ['c', 'a', 'd', 'b'],
    ['d', 'b', 'c', 'a'],
]
order = condition_orders[rotation]

# Get one row per item_id + cond
unique = (
    df.groupby(['cond', 'item_id'], group_keys=False)
      .apply(lambda x: x.sample(1))
      .reset_index(drop=True)
)

# Select 10 trials per condition in order
used_ids = set()
selected = []

for cond in order:
    cond_df = unique[(unique['cond'] == cond) & (~unique['item_id'].isin(used_ids))]
    if len(cond_df) < 10:
        raise ValueError(f"Not enough unique items for condition '{cond}'")
    sample = cond_df.sample(10, random_state=rotation)
    used_ids.update(sample['item_id'].tolist())
    selected.append(sample)

# Combine and shuffle
final = pd.concat(selected).sample(frac=1, random_state=rotation).reset_index(drop=True)

# Convert ID_* columns to int
id_cols = [col for col in final.columns if col.startswith("ID_")]
for col in id_cols:
    final[col] = final[col].fillna(0).astype(int)

# Convert trigger_* columns to float (already in seconds)
trigger_cols = [col for col in final.columns if col.startswith("trigger_")]
for col in trigger_cols:
    final[col] = final[col].fillna(0).astype(float)

# Save full final trial list
final.to_csv('selected_trials.csv', index=False)
